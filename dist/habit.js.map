{"version":3,"sources":["../src/habit.js"],"names":[],"mappings":";;;;;;;wBACwB,UAAU;;kBACL,IAAI;;qBACF,OAAO;;AAEtC,IAAI,MAAM,CAAC;;AAEX,IAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE;AACtH,OAAM,GAAG;AACR,KAAG,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;AACvC,KAAG,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;AACvC,SAAO,EAAE,OAAO,CAAC,GAAG,CAAC,0BAA0B;EAC/C,CAAC;CACF,MAAM;AACN,OAAM,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAa,YAAY,CAAC,CAAC,CAAC;CAChD;;AAED,SAAS,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC7C,KAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,SAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AAAE,UAAQ,IAAI,KAAK,CAAC;EAAE,CAAC,CAAC;AACvD,SAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,YAAM;AACxB,SAAO,CAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC;AACH,SAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG,EAAK;AAAE,QAAM,CAAE,GAAG,CAAC,CAAC;EAAE,CAAC,CAAC;CACjD,CAAC;;AAEK,IAAM,QAAQ,GAAG;AACvB,SAAQ,EAAA,kBAAC,SAAQ,EAAW;oCAAN,IAAI;AAAJ,OAAI;;;;AAEzB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/B,MAAM,IAAI,gBAAc,SAAQ,SAAI,OAAO,AAAE,CAAC;AAC9C,SAAO,sBAAY,UAAC,OAAO,EAAE,MAAM,EAAK;AACvC,OAAM,OAAO,GAAG;AACf,YAAQ,EAAE,cAAc;AACxB,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,GAAG;AACT,WAAO,EAAE;AACR,iBAAY,EAAE,MAAM,CAAC,GAAG;AACxB,gBAAW,EAAE,MAAM,CAAC,GAAG;KACvB;IACD,CAAC;AACF,OAAM,WAAW,GAAG,SAAd,WAAW,CAAI,GAAG;WAAK,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC;IAAA,CAAC;;AAE7D,mBAAQ,OAAO,EAAE,WAAW,CAAC,CAAC;GAC9B,CAAC,CAAC;EACH;AACD,SAAQ,EAAA,oBAAG;AACV,SAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;EAC/C;AACD,UAAS,EAAA,mBAAC,EAAE,EAAE;AACb,SAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EACpC;AACD,oBAAmB,EAAA,+BAAG;AACrB,SAAO,IAAI,CAAC,QAAQ,EAAE,CACpB,IAAI,CAAC,UAAC,IAAI;UAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;WAAK,MAAM,CAAC,GAAG;IAAA,CAAC;GAAA,CAAC,CACxD,IAAI,CAAC,UAAC,OAAO;UACb,kBAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,EAAE;WAC1B,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;IAAA,CACtB,CAAC;GAAA,CACF,CAAA;EACF;CACD,CAAC","file":"habit.js","sourcesContent":["// habitica API\nimport { Promise } from 'bluebird';\nimport { readFileSync } from 'fs';\nimport { get as httpGet } from 'https';\n\nvar config;\n\nif(process.env.SLACK_HABITICA_BOT_UID && process.env.SLACK_HABITICA_BOT_KEY && process.env.SLACK_HABITICA_BOT_GROUPID) {\n\tconfig = {\n\t\tuid: process.env.SLACK_HABITICA_BOT_UID,\n\t\tkey: process.env.SLACK_HABITICA_BOT_KEY,\n\t\tgroupId: process.env.SLACK_HABITICA_BOT_GROUPID\n\t};\n} else {\n\tconfig = JSON.parse(readFileSync('habit.json'));\n}\n\nfunction parseJSON(resolve, reject, response) {\n\tlet jsonBody = '';\n\tresponse.on('data', (chunk) => { jsonBody += chunk; });\n\tresponse.on('end', () => {\n\t\tresolve (JSON.parse(jsonBody));\n\t});\n\tresponse.on('error', (err) => { reject (err); });\n};\n\nexport const habitApi = {\n\tendpoint(endpoint, ...args) {\n\t\t// console.log(args);\n\t\tconst urlArgs = args.join('/');\n\t\tconst path = `/api/v2/${endpoint}/${urlArgs}`;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst options = {\n\t\t\t\thostname: 'habitica.com',\n\t\t\t\tpath: path,\n\t\t\t\tport: 443,\n\t\t\t\theaders: {\n\t\t\t\t\t\"x-api-user\": config.uid,\n\t\t\t\t\t\"x-api-key\": config.key\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst resolveJSON = (res) => parseJSON(resolve, reject, res);\n\n\t\t\thttpGet(options, resolveJSON);\n\t\t});\n\t},\n\tgetParty() {\n\t\treturn this.endpoint('groups', config.groupId);\n\t},\n\tgetMember(id) {\n\t\treturn this.endpoint('members', id);\n\t},\n\tgetPartyMembersInfo() {\n\t\treturn this.getParty()\n\t\t\t.then((json) => json.members.map((member) => member._id))\n\t\t\t.then((idArray) =>\n\t\t\t\tPromise.all(idArray.map((id) =>\n\t\t\t\t\thabitApi.getMember(id)\n\t\t\t\t))\n\t\t\t)\n\t}\n};\n"]}